{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { db } from \"../../../store.js\";\n\nclass Goods extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"cardStyle\", {\n      paddingTop: \"15px\",\n      alignItems: \"flex-start\"\n    });\n\n    this.id = props.id;\n    this.name = props.name;\n    this.doMouseEnter = this.doMouseEnter.bind(this);\n    this.onContextMenu = this.onContextMenu.bind(this);\n  }\n\n  onContextMenu(e) {\n    e.preventDefault();\n\n    if (this.props.gameStatus.nowTurnPlayer == this.props.gameStatus.you && this.props.turnSwitch.buySwitch == false) {\n      const URL = './php/action/card_buy.php';\n      const localURL = 'http://localhost/wizard-contest3/php/action/card_buy.php';\n      axios.post(localURL, require('querystring').stringify({\n        gameId: this.props.gameStatus.gameID,\n        whom: this.props.gameStatus.you,\n        cardName: this.props.name,\n        cardName: this.props.name\n      })).then(results => {\n        if (results.data != \"buy cancel\") {\n          db.doc(this.props.gameStatus.gameID).update({\n            finalLog: this.props.name + \"を購入。\"\n          });\n          this.props.dispatch({\n            type: \"BUYPLAYED\"\n          });\n        }\n      }).catch(error => {});\n    }\n  }\n\n  async doMouseEnter() {\n    const URL = './php/action/textget.php';\n    const localURL = 'http://localhost/wizard-contest3/php/action/textget.php';\n    axios.post(localURL, require('querystring').stringify({\n      cardName: this.props.name\n    })).then(results => {\n      const txtdata = results.data;\n      let thisTxt;\n\n      if (txtdata[6] != null) {\n        thisTxt = txtdata[6];\n      } else {\n        thisTxt = \"\";\n      }\n\n      const newText = `${txtdata[0]}\\nタイプ：${txtdata[1]}\\n購入費用：${txtdata[2]}\\n消費マナ：${txtdata[3]}\\n獲得費用：${txtdata[4]}\\n獲得マナ：${txtdata[5]}\\n${thisTxt}`;\n      return this.props.dispatch({\n        type: \"TEXTUPDATE\",\n        text: newText\n      });\n    }).catch(error => {});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"cards\",\n      onMouseEnter: this.doMouseEnter,\n      onContextMenu: this.onContextMenu,\n      style: this.cardStyle,\n      children: this.name\n    });\n  }\n\n}\n\nGoods = connect(state => state)(Goods);\nexport default Goods;","map":null,"metadata":{},"sourceType":"module"}