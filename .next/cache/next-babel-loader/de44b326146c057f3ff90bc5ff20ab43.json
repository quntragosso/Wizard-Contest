{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EnemyHands from \"./cards/EnemyHands.js\";\n\nvar EnemyHand = /*#__PURE__*/function (_Component) {\n  _inherits(EnemyHand, _Component);\n\n  var _super = _createSuper(EnemyHand);\n\n  function EnemyHand(props) {\n    var _this;\n\n    _classCallCheck(this, EnemyHand);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"cardStyle\", {\n      paddingTop: \"15px\",\n      alignItems: \"flex-start\"\n    });\n\n    return _this;\n  }\n\n  _createClass(EnemyHand, [{\n    key: \"render\",\n    value: function render() {\n      var list = [];\n\n      for (var i = 0; i < this.props.enemyStatus.enemyHandNum; i++) {\n        list.push( /*#__PURE__*/_jsx(EnemyHands, {}, i));\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        id: \"enemy_hand\",\n        className: \"mains\",\n        children: list\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }]);\n\n  return EnemyHand;\n}(Component);\n\nEnemyHand = connect(function (state) {\n  return state;\n})(EnemyHand);\nexport default EnemyHand;","map":null,"metadata":{},"sourceType":"module"}