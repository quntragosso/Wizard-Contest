{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Reset from \"../Static/Reset\";\nimport Style from \"../Static/Style\";\nimport LeftArea from \"../components/Leftarea.js\";\nimport RightArea from \"../components/Rightarea.js\";\nimport SubBox from \"../components/Subbox.js\";\n\nvar GameScene = /*#__PURE__*/function (_Component) {\n  _inherits(GameScene, _Component);\n\n  var _super = _createSuper(GameScene);\n\n  function GameScene() {\n    _classCallCheck(this, GameScene);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GameScene, [{\n    key: \"handUpdate\",\n    value: function handUpdate(gameId, whoseUpdate, youOrEnemy) {\n      var _this = this;\n\n      var URL = './php/update/hand_update.php';\n      var localURL = 'http://localhost/wizard-contest3/php/update/hand_update.php';\n      axios.post(localURL, require('querystring').stringify({\n        gameId: gameId,\n        whoseHand: whoseUpdate\n      })).then(function (results) {\n        if (youOrEnemy == \"you\") {\n          return _this.props.dispatch({\n            type: \"YOURHANDUPDATE\",\n            newHand: results.data\n          });\n        } else if (youOrEnemy == \"enemy\") {\n          return _this.props.dispatch({\n            type: \"ENEMYHANDUPDATE\",\n            newHand: results.data.length\n          });\n        }\n      })[\"catch\"](function (error) {});\n    }\n  }, {\n    key: \"archiUpdate\",\n    value: function archiUpdate(gameId, whoseUpdate, youOrEnemy) {\n      var _this2 = this;\n\n      var URL = './php/update/archi_update.php';\n      var localURL = 'http://localhost/wizard-contest3/php/update/archi_update.php';\n      axios.post(localURL, require('querystring').stringify({\n        gameId: gameId,\n        whoseArchi: whoseUpdate\n      })).then(function (results) {\n        if (youOrEnemy == \"you\") {\n          return _this2.props.dispatch({\n            type: \"YOURARCHIUPDATE\",\n            newArchi: results.data\n          });\n        } else if (youOrEnemy == \"enemy\") {\n          return _this2.props.dispatch({\n            type: \"ENEMYARCHIUPDATE\",\n            newArchi: results.data\n          });\n        }\n      })[\"catch\"](function (error) {});\n    }\n  }, {\n    key: \"infoUpdate\",\n    value: function infoUpdate(gameId, whoseUpdate, youOrEnemy) {\n      var _this3 = this;\n\n      var URL = './php/update/info_update.php';\n      var localURL = 'http://localhost/wizard-contest3/php/update/info_update.php';\n      axios.post(localURL, require('querystring').stringify({\n        gameId: gameId,\n        whoseInfo: whoseUpdate\n      })).then(function (results) {\n        var result = results.data;\n\n        if (youOrEnemy == \"you\") {\n          return _this3.props.dispatch({\n            type: \"YOURINFOUPDATE\",\n            yourDeckNum: result.deck,\n            yourTrashNum: result.trash,\n            yourVicPnt: result.point,\n            yourMana: result.mana,\n            yourGold: result.gold\n          });\n        } else if (youOrEnemy == \"enemy\") {\n          return _this3.props.dispatch({\n            type: \"ENEMYINFOUPDATE\",\n            enemyDeckNum: result.deck,\n            enemyTrashNum: result.trash,\n            enemyVicPnt: result.point,\n            enemyMana: result.mana,\n            enemyGold: result.gold\n          });\n        }\n      })[\"catch\"](function (error) {});\n    }\n  }, {\n    key: \"allUpdate\",\n    value: function allUpdate(gameId, whoseUpdate, youOrEnemy) {\n      this.handUpdate(gameId, whoseUpdate, youOrEnemy);\n      this.archiUpdate(gameId, whoseUpdate, youOrEnemy);\n      this.infoUpdate(gameId, whoseUpdate, youOrEnemy);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        id: \"box_box\",\n        children: [Reset, Style, /*#__PURE__*/_jsxs(\"div\", {\n          id: \"main_box\",\n          children: [/*#__PURE__*/_jsx(LeftArea, {}), /*#__PURE__*/_jsx(RightArea, {})]\n        }), /*#__PURE__*/_jsx(SubBox, {})]\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.allUpdate(this.props.gameStatus.gameID, this.props.gameStatus.you, \"you\");\n\n              case 2:\n                _context.next = 4;\n                return this.allUpdate(this.props.gameStatus.gameID, this.props.gameStatus.enemy, \"enemy\");\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }]);\n\n  return GameScene;\n}(Component);\n\nGameScene = connect(function (state) {\n  return state;\n})(GameScene);\nexport default GameScene;","map":null,"metadata":{},"sourceType":"module"}