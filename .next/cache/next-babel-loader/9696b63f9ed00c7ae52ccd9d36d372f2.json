{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\wizard-contest8\\\\components\\\\entries\\\\Nameinput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nvar NameInput = /*#__PURE__*/function (_Component) {\n  _inherits(NameInput, _Component);\n\n  var _super = _createSuper(NameInput);\n\n  function NameInput(props) {\n    var _this;\n\n    _classCallCheck(this, NameInput);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"buttonStyle\", {\n      textAlign: \"center\",\n      cursor: \"pointer\"\n    });\n\n    _this.state = {\n      name: \"\",\n      password: \"\"\n    };\n    _this.nameChange = _this.nameChange.bind(_assertThisInitialized(_this));\n    _this.passwordChange = _this.passwordChange.bind(_assertThisInitialized(_this));\n    _this.entry = _this.entry.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NameInput, [{\n    key: \"nameChange\",\n    value: function nameChange(e) {\n      var re = /^([a-zA-Z0-9]{1,8})$/;\n      if (e.target.value === \"\" || re.test(e.target.value)) this.setState({\n        name: e.target.value,\n        password: this.state.password\n      });\n    }\n  }, {\n    key: \"passwordChange\",\n    value: function passwordChange(e) {\n      var re = /^([a-zA-Z0-9]{4,8})$/;\n\n      if (e.target.value === \"\" || re.test(e.target.value)) {\n        this.setState({\n          name: this.state.name,\n          password: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"entry\",\n    value: function entry() {\n      var _this2 = this;\n\n      var URL = './php/user/user_login.php';\n      var localURL = 'http://localhost/wizard-contest3/php/user/user_login.php';\n      axios.post(localURL, require('querystring').stringify({\n        username: this.state.name,\n        password: this.state.password\n      })).then(function (results) {\n        _this2.props.dispatch({\n          type: \"USERSET\",\n          name: results.data[0].name,\n          id: results.data[0].id,\n          win: results.data[0].win,\n          lose: results.data[0].lose\n        });\n      })[\"catch\"](function (error) {});\n      this.setState({\n        name: \"\",\n        password: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u203B\\u534A\\u89D2\\u82F1\\u6570\\u5B578\\u6841\\u307E\\u3067\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), \"username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          size: \"10\",\n          value: this.state.value,\n          onChange: this.nameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 105\n        }, this), \"password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          size: \"10\",\n          value: this.state.value,\n          onChange: this.passwordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"imput_button\",\n          onClick: this.entry,\n          style: this.buttonStyle,\n          children: \"\\u3053\\u306E\\u540D\\u524D\\u3067\\u5BFE\\u6226\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this);\n    }\n  }]);\n\n  return NameInput;\n}(Component);\n\nNameInput = connect(function (state) {\n  return state;\n})(NameInput);\nexport default NameInput;","map":{"version":3,"sources":["C:/xampp/htdocs/wizard-contest8/components/entries/Nameinput.js"],"names":["React","Component","connect","axios","NameInput","props","textAlign","cursor","state","name","password","nameChange","bind","passwordChange","entry","e","re","target","value","test","setState","URL","localURL","post","require","stringify","username","then","results","dispatch","type","data","id","win","lose","error","buttonStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nclass NameInput extends Component {\r\n\r\n    buttonStyle = {\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n            password: \"\"\r\n        }\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.entry = this.entry.bind(this);\r\n    }\r\n\r\n    nameChange(e) {\r\n        const re = /^([a-zA-Z0-9]{1,8})$/\r\n        if (e.target.value === \"\" || re.test(e.target.value))\r\n            this.setState({\r\n                name: e.target.value,\r\n                password: this.state.password\r\n            });\r\n    }\r\n\r\n    passwordChange(e) {\r\n        const re = /^([a-zA-Z0-9]{4,8})$/\r\n        if (e.target.value === \"\" || re.test(e.target.value)) {\r\n            this.setState({\r\n                name: this.state.name,\r\n                password: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    entry() {\r\n        const URL = './php/user/user_login.php';\r\n        const localURL = 'http://localhost/wizard-contest3/php/user/user_login.php';\r\n        axios\r\n            .post(localURL, require('querystring').stringify({ username: this.state.name, password: this.state.password }))\r\n            .then((results) => {\r\n                this.props.dispatch({ type: \"USERSET\", name: results.data[0].name, id: results.data[0].id, win: results.data[0].win, lose: results.data[0].lose });\r\n            })\r\n            .catch((error) => {\r\n            });\r\n        this.setState({\r\n            name: \"\",\r\n            password: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <p>※半角英数字8桁まで</p>\r\n            username:<input type=\"text\" size=\"10\" value={this.state.value} onChange={this.nameChange} /><br />\r\n            password:<input type=\"text\" size=\"10\" value={this.state.value} onChange={this.passwordChange} />\r\n            <div id=\"imput_button\" onClick={this.entry} style={this.buttonStyle}>この名前で対戦する</div>\r\n        </div>\r\n    }\r\n\r\n}\r\nNameInput = connect((state) => state)(NameInput);\r\nexport default NameInput;"]},"metadata":{},"sourceType":"module"}