{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { db } from \"../../store.js\";\n\nclass TurnBox extends Component {\n  constructor(props) {\n    super(props);\n    this.nextTurn = this.nextTurn.bind(this);\n  }\n\n  nextTurn() {\n    if (this.props.gameStatus.nowTurnPlayer == this.props.gameStatus.you) {\n      if (this.props.yourStatus.yourVicPnt >= 10) {\n        db.doc(this.props.gameStatus.gameID).update({\n          finalLog: this.props.gameStatus.you + \"win!\"\n        });\n      } else {\n        const URL = './php/action/turnend_reset.php';\n        const localURL = 'http://localhost/wizard-contest3/php/action/turnend_reset.php';\n        axios.post(localURL, require('querystring').stringify({\n          gameId: this.props.gameStatus.gameID,\n          whom: this.props.gameStatus.you\n        })).then(() => {\n          const newLog = this.props.gameStatus.enemyName + \"のターン\";\n          db.doc(this.props.gameStatus.gameID).update({\n            finalLog: newLog,\n            nowturnplayer: this.props.gameStatus.enemy\n          });\n          this.props.dispatch({\n            type: \"TURNPASSED\"\n          });\n        }).catch(error => {});\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      id: \"turnend_box\",\n      onClick: this.nextTurn,\n      children: this.props.otherInfo.turnendText\n    });\n  }\n\n  componentDidMount() {\n    let firstPlayer;\n    let firstText;\n\n    if (this.props.gameStatus.nowTurnPlayer == \"host\" && this.props.gameStatus.you == \"host\") {\n      firstPlayer = this.props.gameStatus.yourName;\n      firstText = \"ターンを終了する\";\n    } else if (this.props.gameStatus.nowTurnPlayer == \"host\" && this.props.gameStatus.you == \"guest\") {\n      firstPlayer = this.props.gameStatus.enemyName;\n      firstText = \"\";\n    } else if (this.props.gameStatus.nowTurnPlayer == \"guest\" && this.props.gameStatus.you == \"host\") {\n      firstPlayer = this.props.gameStatus.enemyName;\n      firstText = \"\";\n    } else if (this.props.gameStatus.nowTurnPlayer == \"guest\" && this.props.gameStatus.you == \"guest\") {\n      firstPlayer = this.props.gameStatus.yourName;\n      firstText = \"ターンを終了する\";\n    }\n\n    ;\n    this.props.dispatch({\n      type: \"FIRSTPLAYERSET\",\n      name: firstPlayer,\n      text: firstText\n    });\n  }\n\n}\n\nTurnBox = connect(state => state)(TurnBox);\nexport default TurnBox;","map":null,"metadata":{},"sourceType":"module"}