{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport gameStatusReducer from \"./stores/gameStatus/reducer.js\";\nimport otherInfoReducer from './stores/otherinfo/reducer.js';\nimport marketReducer from './stores/market/reducer.js';\nimport yourStatusReducer from \"./stores/yourstatus/reducer.js\";\nimport enemyStatusReducer from \"./stores/enemystatus/reducer.js\";\nimport turnSwichRedecer from \"./stores/turnswitch/reducer.js\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\"; // Firestore用に改変追加\n\nimport { firebaseConfig } from './config.js';\nvar fireapp;\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp;\nconst fireStore = firebase.firestore();\nconst db = fireStore.collection(\"games\");\nexport { db };\nconst initialState = {\n  gameStatus: {\n    userID: \"\",\n    yourName: \"\",\n    you: \"\",\n    enemyName: \"unset\",\n    enemy: \"\",\n    gameID: \"\",\n    nowTurnPlayer: \"\"\n  },\n  yourStatus: {\n    yourHand: [],\n    yourArchi: [],\n    yourDeckNum: \"\",\n    yourTrashNum: \"\",\n    yourVicPnt: \"\",\n    yourMana: \"\",\n    yourGold: \"\"\n  },\n  enemyStatus: {\n    enemyHandNum: \"\",\n    enemyArchi: [],\n    enemyDeckNum: \"\",\n    enemyTrashNum: \"\",\n    enemyVicPnt: \"\",\n    enemyMana: \"\",\n    enemyGold: \"\"\n  },\n  market: {\n    marketTopArr: [{\n      id: 1,\n      name: \"銅貨\"\n    }, {\n      id: 2,\n      name: \"銀貨\"\n    }, {\n      id: 3,\n      name: \"金貨\"\n    }],\n    marketBottomArr: [{\n      id: 4,\n      name: \"小さな魔石\"\n    }, {\n      id: 5,\n      name: \"魔石\"\n    }, {\n      id: 6,\n      name: \"大魔石\"\n    }]\n  },\n  turnSwitch: {\n    buySwitch: false,\n    actionSwitch: \"donot\",\n    enemyTurn: false\n  },\n  otherInfo: {\n    text: \"\",\n    turnPlayerText: \"\",\n    turnendText: \"\",\n    logs: []\n  }\n};\n\nfunction reducer(state = {}, action) {\n  return {\n    gameStatus: gameStatusReducer(state.gameStatus, action),\n    yourStatus: yourStatusReducer(state.yourStatus, action),\n    enemyStatus: enemyStatusReducer(state.enemyStatus, action),\n    market: marketReducer(state.market, action),\n    turnSwitch: turnSwichRedecer(state.turnSwitch, action),\n    otherInfo: otherInfoReducer(state.otherInfo, action, state.gameStatus)\n  };\n}\n\nexport function initStore(state = initialState) {\n  return createStore(reducer, state, applyMiddleware(thunkMiddleware));\n}","map":null,"metadata":{},"sourceType":"module"}