{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Reset from \"../Static/Reset\";\nimport Style from \"../Static/Style\";\nimport LeftArea from \"../components/Leftarea.js\";\nimport RightArea from \"../components/Rightarea.js\";\nimport SubBox from \"../components/Subbox.js\";\n\nclass GameScene extends Component {\n  handUpdate(gameId, whoseUpdate, youOrEnemy) {\n    const URL = './php/update/hand_update.php';\n    const localURL = 'http://localhost/wizard-contest3/php/update/hand_update.php';\n    axios.post(URL, require('querystring').stringify({\n      gameId: gameId,\n      whoseHand: whoseUpdate\n    })).then(results => {\n      if (youOrEnemy == \"you\") {\n        return this.props.dispatch({\n          type: \"YOURHANDUPDATE\",\n          newHand: results.data\n        });\n      } else if (youOrEnemy == \"enemy\") {\n        return this.props.dispatch({\n          type: \"ENEMYHANDUPDATE\",\n          newHand: results.data.length\n        });\n      }\n    }).catch(error => {});\n  }\n\n  archiUpdate(gameId, whoseUpdate, youOrEnemy) {\n    const URL = './php/update/archi_update.php';\n    const localURL = 'http://localhost/wizard-contest3/php/update/archi_update.php';\n    axios.post(URL, require('querystring').stringify({\n      gameId: gameId,\n      whoseArchi: whoseUpdate\n    })).then(results => {\n      if (youOrEnemy == \"you\") {\n        return this.props.dispatch({\n          type: \"YOURARCHIUPDATE\",\n          newArchi: results.data\n        });\n      } else if (youOrEnemy == \"enemy\") {\n        return this.props.dispatch({\n          type: \"ENEMYARCHIUPDATE\",\n          newArchi: results.data\n        });\n      }\n    }).catch(error => {});\n  }\n\n  infoUpdate(gameId, whoseUpdate, youOrEnemy) {\n    const URL = './php/update/info_update.php';\n    const localURL = 'http://localhost/wizard-contest3/php/update/info_update.php';\n    axios.post(URL, require('querystring').stringify({\n      gameId: gameId,\n      whoseInfo: whoseUpdate\n    })).then(results => {\n      const result = results.data;\n\n      if (youOrEnemy == \"you\") {\n        return this.props.dispatch({\n          type: \"YOURINFOUPDATE\",\n          yourDeckNum: result.deck,\n          yourTrashNum: result.trash,\n          yourVicPnt: result.point,\n          yourMana: result.mana,\n          yourGold: result.gold\n        });\n      } else if (youOrEnemy == \"enemy\") {\n        return this.props.dispatch({\n          type: \"ENEMYINFOUPDATE\",\n          enemyDeckNum: result.deck,\n          enemyTrashNum: result.trash,\n          enemyVicPnt: result.point,\n          enemyMana: result.mana,\n          enemyGold: result.gold\n        });\n      }\n    }).catch(error => {});\n  }\n\n  allUpdate(gameId, whoseUpdate, youOrEnemy) {\n    this.handUpdate(gameId, whoseUpdate, youOrEnemy);\n    this.archiUpdate(gameId, whoseUpdate, youOrEnemy);\n    this.infoUpdate(gameId, whoseUpdate, youOrEnemy);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      id: \"box_box\",\n      children: [Reset, Style, /*#__PURE__*/_jsxs(\"div\", {\n        id: \"main_box\",\n        children: [/*#__PURE__*/_jsx(LeftArea, {}), /*#__PURE__*/_jsx(RightArea, {})]\n      }), /*#__PURE__*/_jsx(SubBox, {})]\n    });\n  }\n\n  async componentDidMount() {\n    await this.allUpdate(this.props.gameStatus.gameID, this.props.gameStatus.you, \"you\");\n    await this.allUpdate(this.props.gameStatus.gameID, this.props.gameStatus.enemy, \"enemy\");\n  }\n\n}\n\nGameScene = connect(state => state)(GameScene);\nexport default GameScene;","map":null,"metadata":{},"sourceType":"module"}